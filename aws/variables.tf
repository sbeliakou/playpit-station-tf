variable "myip" {
  description = "Home public IP"
  default     = "127.0.0.1/32"
}

variable "aws_region" {
  description = "AWS Region"
  type        = string

  validation {
    condition     = length(var.aws_region) > 0
    error_message = "The aws_region variable must not be empty."
  }
}

variable "aws_availability_zone" {
  description = "AWS Availability Zone"
  type        = string

  validation {
    condition     = length(var.aws_availability_zone) > 0 && can(regex(var.aws_region, var.aws_availability_zone))
    error_message = "The aws_availability_zone variable must not be empty and must include the aws_region value."
  }
}

variable "aws_vpc_name" {
  description = "VPC name"
  type        = string

  validation {
    condition     = length(var.aws_vpc_name) > 0
    error_message = "The aws_vpc_name variable must not be empty."
  }
}

variable "aws_ec2_sshkey_name" {
  description = "EC2 ssh key name"
  type        = string

  validation {
    condition     = length(var.aws_ec2_sshkey_name) > 0
    error_message = "The aws_ec2_sshkey_name variable must not be empty."
  }
}

variable "aws_instance_type" {
  description = "EC2 Instance Type"
  type        = string
  default     = "c5d.xlarge"
}

variable "aws_spot_price" {
  description = "Max Price for SPOT offerings"
  type        = string
  default     = "0.16"
}

variable "loglevel" {
  description = "Playpit platform log level configuration"
  default     = ""
}

variable "user_name" {
  description = "Playpit platform student name"
  type        = string

  validation {
    condition     = can(regex("^[A-Z][a-z]+\\s[A-Z][a-z]+$", var.user_name))
    error_message = "The user_name must be in the format 'Firstname Lastname' with each name starting with an uppercase letter followed by lowercase letters."
  }
}

variable "basic_auth_password" {
  description = "Password for basic authentication. If unset, it will be generated by Terraform."
  type        = string
}

variable "domain_name" {
  description = "Domain name, for example: if FQDN is '57-58-59-60.somwhere.com', then domain_name variable should be like 'somewhere.com', and '57-58-59-60' will be picked from VM public IP automatically"
  type        = string
}

variable "training" {
  description = "Playpit platform training configuration"
  type        = string

  validation {
    condition     = can(regex("^(docker|k8s)$", var.training))
    error_message = "Must be 'docker' or 'k8s'."
  }
}